name: CI

on:
  workflow_dispatch:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage manual --all-files --show-diff-on-failure

  checks:
    name: Check ${{ matrix.session }}-${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python: ["3.8", "3.9", "3.10"]
        session: ["mypy", "xdoctest"]
        include:
          - { python: "3.11", os: "ubuntu-latest", session: "typeguard" }
    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          nox --version
      - name: Run Nox
        run: |
          nox --python=${{ matrix.python }}

  tests:
    name: Tests Python-${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      # - name: Install
      #   run: |
      #     pip install --constraint=constraints.txt coverage[toml] pytest
      #     pip install --constraint=constraints.txt .
      # - name: Run test
      #   run: |
      #     # coverage run --parallel -m pytest
      #     pytest

      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          nox --version
      - name: Run Nox
        run: |
          nox -s tests --python=${{ matrix.python }}
      - name: Upload coverage data
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install Nox
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          nox --version
      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
      - name: Combine coverage data and display human readable report
        run: |
          nox --session=coverage
      - name: Create coverage report
        run: |
          nox --session=coverage -- xml
      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.1
