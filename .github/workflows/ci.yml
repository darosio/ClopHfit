# CI Workflow
# This workflow runs linting, type checking, and testing (pytest with coverage),
# builds documentation, and deploys it to GitHub Pages.
name: CI

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:

  pre-commit:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Sync project with lint deps
        run: uv sync --locked --group lint
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/pre-commit/
          key: pre-commit|${{ runner.os }}|${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: pre-commit|${{ runner.os }}|
      - name: Run lint
        run: |
          make lint


  tests:
    name: ${{ matrix.tests }} py-${{ matrix.python }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.13", "3.12", "3.11"]
        tests: [test, type, xdoc]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
          python-version: ${{ matrix.python }}
      - name: Sync project with tests deps
        run: uv sync --locked --group tests
      - name: Run test and coverage
        if: matrix.tests == 'test'
        run: |
          make test
          make cov
      - name: Upload coverage report
        if: matrix.tests == 'test'
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run mypy
        if: matrix.tests == 'type'
        run: |
          make type
      - name: Run xdoctest
        if: matrix.tests == 'xdoc'
        run: |
          make xdoc

  docs_build:
    runs-on: ubuntu-latest
    steps:
      - name: Install binaries for docs
        run: |
          sudo apt-get update
          sudo apt-get install -y plantuml libopenblas-dev
      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: "3.1.12"
      - run: echo "# Test" | pandoc -t html
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Sync project with docs deps
        run: uv sync --locked --extra docs
      - name: Build docs
        run: |
          make docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          name: github-pages
          path: ./docs/_build

  docs_deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [docs_build]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: github-pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  auto_merge_deps:
    name: Auto Merge dependencies labeled PRs
    needs: [pre-commit, tests, docs_build]
    # Run only on pull_request labeled "dependencies"
    if: >
      startsWith(github.event.pull_request.title, 'build(pre-commit): update hooks') ||
      contains(github.event.pull_request.labels.*.name, 'dependencies')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Merge PR
        uses: pascalgn/automerge-action@v0.16.4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ""
          MERGE_METHOD: squash
          DELETE_BRANCH_AFTER_MERGE: true
          LOG: "TRACE" # or DEBUG
