# Release to GitHub and PyPI after testing TestPyPI
name: CD
on:
  push:
  # workflow_run:
  #   workflows: ["CI"]
  #   types:
  #     - completed
env:
  STABLE_PYTHON_VERSION: "3.11"

jobs:
  testpypi:
    runs-on: ubuntu-latest
    if: "startsWith(github.event.head_commit.message, 'bump:')"
    outputs:
      version: ${{ steps.version.outputs.ver }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.STABLE_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.STABLE_PYTHON_VERSION }}
      - name: Get version
        id: version
        run: |
          echo ${{ github.event.head_commit.message }}
          ver=`echo ${{ github.event.head_commit.message }} | awk '{ print $NF }'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "ver=${ver}" >> $GITHUB_ENV
      - name: Run clop
        run: |
          python -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ clophfit==${{ env.ver }}
          clop --version
          clop prtecan tests/Tecan/list.pH
          cat out2/metadata-labels.txt

  release:
    name: Release to github
    needs: testpypi
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          # bodyFile: "release.md"
          tag: v${{ needs.testpypi.outputs.version }}

  publish:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - run: |
          pipx run hatch build
          pipx run hatch publish --user=__token__ --auth=${{ secrets.PYPI_TOKEN }}
